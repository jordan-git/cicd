version: 2.1

executors:
  node-executor:
    docker:
      - image: cimg/node:22.14
    working_directory: ~/app
    environment:
      NODE_ENV: ${NODE_ENV} || DEV

jobs:
  build:
    executor: node-executor
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Run security audit
          command: npm audit
      - run:
          name: Docker login
          command: docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"
      - run:
          name: Build and push Docker image
          command: |
            docker build -t ${DOCKER_IMAGE}:latest .
            docker push ${DOCKER_IMAGE}
      - persist_to_workspace:
          root: .
          paths:
            - "*"

  deploy:
    executor: node-executor
    steps:
      - attach_workspace:
          at: ~/app
      - add_ssh_keys:
          fingerprints:
            - "SHA256:/mhK5zu5zxTnfmJJNOOcJzuXz8eFeg8JTDCqkY5iaSQ"
      - run:
          name: Pull image & run container
          command: |
            ssh -o StrictHostKeyChecking=no ${AWS_EC2_USERNAME}@${AWS_EC2_PUBLIC_DNS} "
              docker pull ${DOCKER_USERNAME}/${DOCKER_IMAGE}:latest
              docker run -d --name cicd-ca \
                -p 8080:8080 8443:8443 \
                -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
                -e AWS_SECRET_KEY=$AWS_SECRET_KEY \
                -e AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION \
                -e AWS_S3_BUCKET_NAME=$AWS_S3_BUCKET_NAME \
                ${DOCKER_USERNAME}/${DOCKER_IMAGE}:latest"
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: main
